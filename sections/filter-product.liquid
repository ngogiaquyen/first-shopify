{% comment %}
  This Liquid file displays all products in the Shopify store in a responsive grid layout.
  It includes product images, titles, prices, an "Add to Cart" button, pagination, and filtering by product type using buttons only.
  Updated to include only an "All" button and product type buttons, removing the sort dropdown.
{% endcomment %}

{% style %}
  .products-section {
    max-width: 1280px;
    margin: 0 auto;
    padding: var(--page-margin);
    background: var(--color-background);
    color: var(--color-foreground);
  }

  .products-filter {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
    justify-content: center;
  }

  .products-filter__type-button {
    background: var(--color-background);
    border: 1px solid var(--color-border);
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    color: var(--color-foreground);
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: background 0.2s ease, color 0.2s ease, border-color 0.2s ease;
  }

  .products-filter__type-button:hover {
    background: var(--color-background-hover);
    color: var(--color-accent);
  }

  .products-filter__type-button--active {
    background: var(--color-accent);
    color: #ffffff;
    border-color: var(--color-accent);
  }

  .products-filter__type-button:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--color-accent);
  }

  .products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1.5rem;
    padding: 1rem 0;
  }

  .product-card {
    display: flex;
    flex-direction: column;
    align-items: center;
    background: var(--color-background);
    border: 1px solid var(--color-border);
    border-radius: 0.5rem;
    overflow: hidden;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .product-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .product-card__image {
    width: 100%;
    height: 250px;
    object-fit: cover;
  }

  .product-card__content {
    padding: 1rem;
    text-align: center;
    width: 100%;
  }

  .product-card__title {
    font-size: 1.125rem;
    font-weight: 500;
    margin: 0.5rem 0;
    color: var(--color-foreground);
    text-decoration: none;
  }

  .product-card__title:hover {
    color: var(--color-accent);
  }

  .product-card__price {
    font-size: 1rem;
    font-weight: 600;
    color: var(--color-accent);
    margin-bottom: 1rem;
  }

  .product-card__button {
    background: var(--color-accent);
    color: #ffffff;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 0.375rem;
    cursor: pointer;
    font-weight: 500;
    transition: background 0.2s ease;
    width: 100%;
    text-align: center;
  }

  .product-card__button:hover {
    background: #1d4ed8; /* Darker shade of accent color */
  }

  .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
    margin-top: 2rem;
  }

  .pagination__link {
    padding: 0.5rem 1rem;
    border: 1px solid var(--color-border);
    border-radius: 0.375rem;
    text-decoration: none;
    color: var(--color-foreground);
    font-size: 1rem;
    transition: background 0.2s ease;
  }

  .pagination__link:hover {
    background: var(--color-background-hover);
    color: var(--color-accent);
  }

  .pagination__link--disabled {
    color: #a0aec0;
    pointer-events: none;
  }

  .pagination__link--current {
    background: var(--color-accent);
    color: #ffffff;
    border-color: var(--color-accent);
  }

  @media screen and (max-width: 768px) {
    .products-filter {
      justify-content: flex-start;
    }

    .products-filter__type-button {
      padding: 0.5rem 0.75rem;
      font-size: 0.75rem;
    }

    .products-grid {
      grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
      gap: 1rem;
    }

    .product-card__image {
      height: 150px;
    }

    .product-card__title {
      font-size: 1rem;
    }

    .product-card__price {
      font-size: 0.875rem;
    }

    .product-card__button {
      padding: 0.5rem 1rem;
      font-size: 0.875rem;
    }
  }
{% endstyle %}

<section class="products-section" aria-label="All products">
  <h1>All Products</h1>

  {% comment %} Filter Form with Product Type Buttons {% endcomment %}
  <form class="products-filter" action="{{ collection.url }}" method="get">
    {% assign product_types = collection.all_types | sort %}
    {% if product_types.size > 0 %}
      <button
        type="submit"
        name="filter_type"
        value=""
        class="products-filter__type-button {% unless current_tags %}products-filter__type-button--active{% endunless %}"
        aria-label="Show all product types"
      >
        All
      </button>
      {% for type in product_types %}
        <button
          type="submit"
          name="filter_type"
          value="{{ type | handle }}"
          class="products-filter__type-button {% if current_tags contains type %}products-filter__type-button--active{% endif %}"
          aria-label="Filter by {{ type }}"
        >
          {{ type }}
        </button>
      {% endfor %}
    {% endif %}
  </form>

  <div class="products-grid">
    {% paginate collection.products by 12 %}
      {% for product in collection.products %}
        <div class="product-card">
          <a href="{{ product.url }}" class="product-card__image-link" aria-label="{{ product.title }}">
            {% if product.featured_image %}
              <img
                src="{{ product.featured_image | image_url: width: 300 }}"
                alt="{{ product.title | escape }}"
                class="product-card__image"
                loading="lazy"
              />
            {% else %}
              <img
                src="{{ 'no-image.svg' | asset_url }}"
                alt="No image available"
                class="product-card__image"
                loading="lazy"
              />
            {% endif %}
          </a>
          <div class="product-card__content">
            <a href="{{ product.url }}" class="product-card__title">{{ product.title }}</a>
            <div class="product-card__price">
              {% if product.price_varies %}
                From {{ product.price_min | money }}
              {% else %}
                {{ product.price | money }}
              {% endif %}
            </div>
            {% form 'product', product, class: 'product-card__form' %}
              <input type="hidden" name="id" value="{{ product.variants.first.id }}">
              <button type="submit" class="product-card__button">Add to Cart</button>
            {% endform %}
          </div>
        </div>
      {% endfor %}
      {% if paginate.pages > 1 %}
        <nav class="pagination" aria-label="Pagination">
          {% if paginate.previous %}
            <a href="{{ paginate.previous.url }}" class="pagination__link" aria-label="Previous page">Previous</a>
          {% else %}
            <span class="pagination__link pagination__link--disabled" aria-disabled="true">Previous</span>
          {% endif %}

          {% for part in paginate.parts %}
            {% if part.is_link %}
              <a href="{{ part.url }}" class="pagination__link" aria-label="Page {{ part.title }}">{{ part.title }}</a>
            {% else %}
              {% if part.title == paginate.current_page %}
                <span class="pagination__link pagination__link--current" aria-current="page">{{ part.title }}</span>
              {% else %}
                <span class="pagination__link pagination__link--disabled">{{ part.title }}</span>
              {% endif %}
            {% endif %}
          {% endfor %}

          {% if paginate.next %}
            <a href="{{ paginate.next.url }}" class="pagination__link" aria-label="Next page">Next</a>
          {% else %}
            <span class="pagination__link pagination__link--disabled" aria-disabled="true">Next</span>
          {% endif %}
        </nav>
      {% endif %}
    {% endpaginate %}
  </div>
</section>

{% javascript %}
document.addEventListener('DOMContentLoaded', function() {
  const typeButtons = document.querySelectorAll('.products-filter__type-button');

  typeButtons.forEach(button => {
    button.addEventListener('click', function(event) {
      event.preventDefault(); // Prevent default form submission
      const form = document.querySelector('.products-filter form');
      const selectedType = this.value;
      
      let url = form.action; // Use form action (collection.url)
      if (selectedType) {
        url += '?filter_type=' + encodeURIComponent(selectedType);
      }
      
      window.history.pushState({}, '', url);
      window.location.href = url;
    });
  });
});
{% endjavascript %}

{% schema %}
{
  "name": "Products",
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    }
  ],
  "presets": [
    {
      "name": "All Products",
      "category": "Collection"
    }
  ]
}
{% endschema %}