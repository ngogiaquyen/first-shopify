{% comment %}
  This section is used in the collection template to render collection page
  listing all products within a collection with product type filtering.

  https://shopify.dev/docs/storefronts/themes/architecture/templates/collection
{% endcomment %}

{% comment %}
  Get the 'type' and 'page' query parameters from the URL
{% endcomment %}
{% assign selected_type = request.query.type | default: 'all' | downcase %}
{% assign current_page = request.query.page | default: '1' | plus: 0 %}
{% assign per_page = 20 %}

<div class="collection-container">
  <h1>{{ collection.title }}</h1>

  <div class="collection-filter">
    <a href="{{ collection.url }}" class="filter-button{% if selected_type == 'all' %} active{% endif %}" data-filter="all">All Products</a>
    {% assign product_types = collection.products | map: 'type' | uniq %}
    {% for type in product_types %}
      {% if type != blank %}
        {% assign type_handleized = type | handleize | downcase %}
        <a href="{{ collection.url }}?type={{ type_handleized }}" class="filter-button{% if selected_type == type_handleized %} active{% endif %}" data-filter="{{ type_handleized }}">{{ type }}</a>
      {% endif %}
    {% endfor %}
  </div>

  <div class="collection-products" id="product-grid">
    {% comment %}
      Collect filtered products
    {% endcomment %}
    {% assign filtered_products = collection.products %}
    {% if selected_type != 'all' %}
      {% assign filtered_products = array %}
      {% for product in collection.products %}
        {% assign product_type_handleized = product.type | handleize | downcase %}
        {% if product_type_handleized == selected_type %}
          {% assign filtered_products = filtered_products | push: product %}
        {% endif %}
      {% endfor %}
    {% endif %}
    
    {% comment %}
      Calculate pagination variables
    {% endcomment %}
    {% assign total_products = filtered_products.size %}
    {% assign total_pages = total_products | divided_by: per_page | ceil %}
    {% assign start_index = current_page | minus: 1 | times: per_page %}
    {% assign end_index = start_index | plus: per_page | minus: 1 %}
    
    {% comment %}
      Display products for the current page
    {% endcomment %}
    {% if total_products > 0 %}
      {% for i in (0..total_products) %}
        {% if i >= start_index and i <= end_index %}
          {% assign product = filtered_products[i] %}
          <div class="collection-product" data-product-type="{{ product.type | handleize | downcase }}">
            {% if product.featured_image %}
              {% render 'image',
                class: 'collection-product__image',
                image: product.featured_image,
                url: product.url,
                width: 400,
                height: 400,
                crop: 'center'
              %}
            {% endif %}
            <div class="collection-product__content">
              <p>{{ product.title | escape | link_to: product.url }}</p>
              <p>{{ product.price | money }}</p>
              <p class="product-type">Type: {{ product.type }}</p>
            </div>
          </div>
        {% endif %}
      {% endfor %}
    {% else %}
      <p class="no-products">No products found for this category.</p>
    {% endif %}
    
    {% comment %}
      Custom pagination links
    {% endcomment %}
    {% if total_pages > 1 %}
      <nav class="pagination" role="navigation" aria-label="Pagination">
        <ul class="pagination__list">
          {% if current_page > 1 %}
            <li class="pagination__item">
              <a href="{{ collection.url }}?type={{ selected_type }}&page={{ current_page | minus: 1 }}" class="pagination__link pagination__link--prev" aria-label="Previous page">
                <span>←</span>
              </a>
            </li>
          {% endif %}
          {% for page_num in (1..total_pages) %}
            {% if page_num == current_page %}
              <li class="pagination__item">
                <span class="pagination__link pagination__link--current" aria-current="page">{{ page_num }}</span>
              </li>
            {% else %}
              <li class="pagination__item">
                <a href="{{ collection.url }}?type={{ selected_type }}&page={{ page_num }}" class="pagination__link" aria-label="Page {{ page_num }}">{{ page_num }}</a>
              </li>
            {% endif %}
          {% endfor %}
          {% if current_page < total_pages %}
            <li class="pagination__item">
              <a href="{{ collection.url }}?type={{ selected_type }}&page={{ current_page | plus: 1 }}" class="pagination__link pagination__link--next" aria-label="Next page">
                <span>→</span>
              </a>
            </li>
          {% endif %}
        </ul>
      </nav>
    {% endif %}
  </div>
</div>

{% stylesheet %}
.collection-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 24px 16px;
}

.collection-products {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
  gap: 20px;
  margin: 32px 0;
  padding: 0;
  min-height: 400px; /* Ensure enough space for products */
}

.collection-filter {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  margin: 24px 0;
  justify-content: flex-start;
}

.filter-button {
  padding: 10px 20px;
  border: 1px solid #d1d5db;
  background: #ffffff;
  border-radius: 6px;
  cursor: pointer;
  font-size: 14px;
  font-weight: 500;
  text-transform: capitalize;
  transition: all 0.2s ease;
  text-decoration: none;
  color: #111827;
}

.filter-button.active,
.filter-button:hover {
  background: #111827;
  color: #ffffff;
  border-color: #111827;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.collection-product {
  background: #ffffff;
  border-radius: 10px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  overflow: hidden;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.collection-product:hover {
  transform: translateY(-3px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12);
}

.collection-product__image img {
  width: 100%;
  height: 180px;
  object-fit: cover;
  display: block;
  transition: transform 0.3s ease;
}

.collection-product:hover .collection-product__image img {
  transform: scale(1.03);
}

.collection-product__content {
  padding: 16px;
  text-align: center;
}

.collection-product__content p {
  margin: 6px 0;
  font-size: 14px;
}

.collection-product__content p:first-child a {
  color: #111827;
  font-weight: 600;
  text-decoration: none;
  transition: color 0.2s ease;
}

.collection-product__content p:first-child a:hover {
  color: #2563eb;
}

.collection-product__content .product-type {
  color: #6b7280;
  font-size: 12px;
}

.no-products {
  text-align: center;
  color: #6b7280;
  font-size: 1rem;
  padding: 2rem;
  grid-column: 1 / -1;
}

.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 32px;
  width: 100%;
  padding: 16px 0;
  position: relative;
  bottom: 0;
}

.pagination__list {
  display: flex;
  gap: 8px;
  list-style: none;
  padding: 0;
  margin: 0;
  justify-content: center;
}

.pagination__item {
  display: flex;
  align-items: center;
}

.pagination__link {
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 36px;
  height: 36px;
  padding: 0 10px;
  border: 1px solid #d1d5db;
  border-radius: 6px;
  background: #ffffff;
  color: #111827;
  font-size: 14px;
  font-weight: 500;
  text-decoration: none;
  transition: all 0.2s ease;
}

.pagination__link:hover {
  background: #111827;
  color: #ffffff;
  border-color: #111827;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.pagination__link--current {
  background: #111827;
  color: #ffffff;
  border-color: #111827;
  cursor: default;
}

.pagination__link--prev,
.pagination__link--next {
  font-size: 16px;
  font-weight: 600;
}

/* Tablet */
@media (max-width: 768px) {
  .collection-container {
    padding: 16px 12px;
  }

  .collection-products {
    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
    gap: 16px;
    margin: 24px 0;
    min-height: 300px;
  }

  .collection-product__image img {
    height: 140px;
  }

  .collection-product__content {
    padding: 12px;
  }

  .filter-button {
    padding: 8px 16px;
    font-size: 13px;
  }

  .pagination__link {
    min-width: 32px;
    height: 32px;
    font-size: 13px;
  }

  .pagination__link--prev,
  .pagination__link--next {
    font-size: 14px;
  }
}

/* Mobile */
@media (max-width: 480px) {
  .collection-container {
    padding: 12px 8px;
  }

  .collection-products {
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 12px;
    margin: 16px 0;
    min-height: 200px;
  }

  .collection-product__image img {
    height: 110px;
  }

  .collection-product__content {
    padding: 10px;
  }

  .collection-product__content p {
    font-size: 13px;
  }

  .collection-product__content .product-type {
    font-size: 11px;
  }

  .filter-button {
    padding: 6px 12px;
    font-size: 12px;
  }

  .pagination__link {
    min-width: 28px;
    height: 28px;
    font-size: 12px;
  }

  .pagination__link--prev,
  .pagination__link--next {
    font-size: 13px;
  }
}
{% endstylesheet %}

{% javascript %}
document.addEventListener('DOMContentLoaded', function() {
  // No JavaScript needed for filtering, as it's handled server-side via URL query parameters
});
{% endjavascript %}

{% schema %}
{
  "name": "t:general.collection",
  "settings": []
}
{% endschema %}