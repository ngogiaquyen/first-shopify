{% comment %}
  This section is used in the collection template to render collection page
  listing all products within a collection with product type filtering.

  https://shopify.dev/docs/storefronts/themes/architecture/templates/collection
{% endcomment %}

<div class="collection-container">
  <h1>{{ collection.title }}</h1>

  <div class="collection-filter">
    <button class="filter-button active" data-filter="all">All Products</button>
    {% assign product_types = collection.products | map: 'type' | uniq %}
    {% for type in product_types %}
      {% if type != blank %}
        <button class="filter-button" data-filter="{{ type | handleize }}">{{ type }}</button>
      {% endif %}
    {% endfor %}
  </div>

  <div class="collection-products" id="product-grid">
    {% for product in collection.products %}
      <div class="collection-product" data-product-type="{{ product.type | handleize }}">
        {% if product.featured_image %}
          {% render 'image',
            class: 'collection-product__image',
            image: product.featured_image,
            url: product.url,
            width: 400,
            height: 400,
            crop: 'center'
          %}
        {% endif %}
        <div class="collection-product__content">
          <p>{{ product.title | escape | link_to: product.url }}</p>
          <p>{{ product.price | money }}</p>
          <p class="product-type">Type: {{ product.type }}</p>
        </div>
      </div>
    {% endfor %}
  </div>
</div>

{% stylesheet %}
.collection-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 24px 16px;
}

.collection-products {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
  gap: 20px;
  margin: 32px 0;
  padding: 0;
}

.collection-filter {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  margin: 24px 0;
  justify-content: flex-start;
}

.filter-button {
  padding: 10px 20px;
  border: 1px solid #d1d5db;
  background: #ffffff;
  border-radius: 6px;
  cursor: pointer;
  font-size: 14px;
  font-weight: 500;
  text-transform: capitalize;
  transition: all 0.2s ease;
}

.filter-button.active,
.filter-button:hover {
  background: #111827;
  color: #ffffff;
  border-color: #111827;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.collection-product {
  background: #ffffff;
  border-radius: 10px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  overflow: hidden;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.collection-product:hover {
  transform: translateY(-3px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12);
}

.collection-product__image img {
  width: 100%;
  height: 180px;
  object-fit: cover;
  display: block;
  transition: transform 0.3s ease;
}

.collection-product:hover .collection-product__image img {
  transform: scale(1.03);
}

.collection-product__content {
  padding: 16px;
  text-align: center;
}

.collection-product__content p {
  margin: 6px 0;
  font-size: 14px;
}

.collection-product__content p:first-child a {
  color: #111827;
  font-weight: 600;
  text-decoration: none;
  transition: color 0.2s ease;
}

.collection-product__content p:first-child a:hover {
  color: #2563eb;
}

.collection-product__content .product-type {
  color: #6b7280;
  font-size: 12px;
}

.collection-product.hidden {
  display: none;
}

/* Tablet */
@media (max-width: 768px) {
  .collection-container {
    padding: 16px 12px;
  }

  .collection-products {
    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
    gap: 16px;
    margin: 24px 0;
  }

  .collection-product__image img {
    height: 140px;
  }

  .collection-product__content {
    padding: 12px;
  }

  .filter-button {
    padding: 8px 16px;
    font-size: 13px;
  }
}

/* Mobile */
@media (max-width: 480px) {
  .collection-container {
    padding: 12px 8px;
  }

  .collection-products {
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 12px;
    margin: 16px 0;
  }

  .collection-product__image img {
    height: 110px;
  }

  .collection-product__content {
    padding: 10px;
  }

  .collection-product__content p {
    font-size: 13px;
  }

  .collection-product__content .product-type {
    font-size: 11px;
  }

  .filter-button {
    padding: 6px 12px;
    font-size: 12px;
  }
}
{% endstylesheet %}

{% javascript %}
document.addEventListener('DOMContentLoaded', function() {
  // Log the number of products to the console
  const products = document.querySelectorAll('.collection-product');
  console.log('Total number of products:', products.length);

  const filterButtons = document.querySelectorAll('.filter-button');
  
  filterButtons.forEach(button => {
    button.addEventListener('click', function() {
      // Remove active class from all buttons
      filterButtons.forEach(btn => btn.classList.remove('active'));
      // Add active class to clicked button
      this.classList.add('active');

      const filterType = this.getAttribute('data-filter');

      // Show/hide products based on filter
      products.forEach(product => {
        const productType = product.getAttribute('data-product-type');
        if (filterType === 'all' || productType === filterType) {
          product.classList.remove('hidden');
        } else {
          product.classList.add('hidden');
        }
      });
    });
  });
});
{% endjavascript %}

{% schema %}
{
  "name": "t:general.collection",
  "settings": []
}
{% endschema %}