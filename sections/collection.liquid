{% comment %}
  This section is used in the collection template to render collection page
  listing all products within a collection with product type filtering.

  https://shopify.dev/docs/storefronts/themes/architecture/templates/collection
{% endcomment %}

{% comment %} Include FontAwesome CDN for cart icon {% endcomment %}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<h1 class="title">{{ collection.title | escape }}</h1>

<div class="collection-filter">
  <button class="filter-button active" data-filter="all">All Products</button>
  {% assign product_types = collection.products | map: 'type' | uniq %}
  {% for type in product_types %}
    {% if type != blank %}
      <button class="filter-button" data-filter="{{ type | handleize }}">{{ type }}</button>
    {% endif %}
  {% endfor %}
</div>

<div class="product-grid-container">
  <div class="product-grid" id="product-grid">
    {% paginate collection.products by 20 %}
      {% for product in collection.products %}
        <div class="product-card" data-product-type="{{ product.type | handleize }}">
          <a aria-label="{{ product.title | escape }}" href="{{ product.url }}">
            {% if product.compare_at_price > product.price %}
              <span class="sale-badge">Sale</span>
            {% endif %}
            {% if product.featured_image %}
              <img class="product-image" src="{{ product.featured_image | img_url: '500x', crop: 'center' }}" alt="{{ product.title | escape }}" loading="lazy">
            {% else %}
              <img class="product-image" src="https://via.placeholder.com/500?text=No+Image" alt="No image available" loading="lazy">
            {% endif %}
            <div class="product-text">
              <p class="product-title">{{ product.title | escape }}</p>
              <p class="product-prices">
                {% if product.compare_at_price > product.price %}
                  <span class="price-original">{{ product.compare_at_price | money }}</span>
                  <span class="price-sale">{{ product.price | money }}</span>
                {% else %}
                  <span class="price-sale">{{ product.price | money }}</span>
                {% endif %}
              </p>
            </div>
          </a>
          {% if product.variants.first %}
            <form action="/cart/add" method="post" class="buy-now-form">
              <input type="hidden" name="id" value="{{ product.variants.first.id }}">
              <input type="hidden" name="quantity" value="1">
              <input type="hidden" name="return_to" value="/checkout">
              <button type="submit" class="buy-now" aria-label="Buy Now {{ product.title | escape }}">
                <i class="fas fa-cart-plus"></i>
              </button>
            </form>
          {% endif %}
        </div>
      {% endfor %}
      {% if collection.products.size == 0 %}
        <p class="no-products">No products available in this collection.</p>
      {% endif %}
      {{ paginate | default_pagination }}
    {% endpaginate %}
  </div>
</div>

{% stylesheet %}
  :root {
    --primary-color: #2563eb;
    --text-color: #1f2937;
    --border-color: #e5e7eb;
    --sale-color: #dc2626;
    --transition: 0.3s ease;
  }

  .product-grid-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
  }

  .title {
    font-size: 2.25rem;
    font-weight: 700;
    color: var(--text-color);
    text-align: left;
    margin-bottom: 2.5rem;
    position: relative;
    opacity: 0;
    transform: translateY(1rem);
    transition: opacity var(--transition), transform var(--transition);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .title::after {
    content: '';
    position: absolute;
    bottom: -0.5rem;
    left: 0;
    width: 100px;
    height: 4px;
    background: linear-gradient(to right, var(--primary-color), transparent);
    border-radius: 2px;
  }

  .product-grid-container.visible .title {
    opacity: 1;
    transform: translateY(0);
  }

  .collection-filter {
    margin-bottom: 2rem;
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .filter-button {
    padding: 0.5rem 1.25rem;
    border: 1px solid var(--border-color);
    background: #fff;
    color: var(--text-color);
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    border-radius: 0.375rem;
    transition: all var(--transition);
  }

  .filter-button.active,
  .filter-button:hover {
    background: var(--primary-color);
    color: #fff;
    border-color: var(--primary-color);
  }

  .product-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1.5rem;
  }

  .product-card {
    position: relative;
    border: 1px solid var(--border-color);
    border-radius: 0.5rem;
    overflow: hidden;
    background: #ffffff;
    opacity: 0;
    transform: translateY(1rem);
    transition: opacity var(--transition), transform var(--transition), border-color var(--transition);
  }

  .product-card a,
  .product-card a:focus {
    text-decoration: none;
  }

  .product-card.visible {
    opacity: 1;
    transform: translateY(0);
  }

  .product-card.visible:nth-child(1) { transition-delay: 0.1s; }
  .product-card.visible:nth-child(2) { transition-delay: 0.2s; }
  .product-card.visible:nth-child(3) { transition-delay: 0.3s; }
  .product-card.visible:nth-child(4) { transition-delay: 0.4s; }

  .product-card:hover {
    transform: translateY(-0.25rem);
    border-color: var(--primary-color);
  }

  .product-image {
    width: 100%;
    aspect-ratio: 1 / 1;
    object-fit: cover;
    display: block;
    transition: transform var(--transition);
  }

  .product-card:hover .product-image {
    transform: scale(1.03);
  }

  .product-text {
    padding: 1rem;
  }

  .product-title {
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--text-color);
    line-height: 1.25rem;
    max-height: 2.5rem;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-bottom: 0.5rem;
  }

  .product-prices {
    display: flex;
    gap: 0.5rem;
    align-items: baseline;
  }

  .price-original {
    font-size: 0.875rem;
    color: #6b7280;
    text-decoration: line-through;
  }

  .price-sale {
    font-size: 1rem;
    color: var(--text-color);
    font-weight: 600;
  }

  .sale-badge {
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;
    background: var(--sale-color);
    color: #ffffff;
    font-size: 0.75rem;
    font-weight: 500;
    padding: 0.25rem 0.5rem;
    border-radius: 0.375rem;
    text-transform: uppercase;
  }

  .buy-now {
    position: absolute;
    bottom: 0;
    right: 0;
    background: #ffffff;
    color: #1a1a1a;
    width: 3rem;
    height: 2.25rem;
    display: flex;
    align-items: center;
    justify-content: center;
    border-top-left-radius: 8px;
    border: 1px solid rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    cursor: pointer;
    font-size: 1.25rem;
  }

  .buy-now:hover {
    background: #f5f5f5;
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);
    transform: translateY(-2px);
    color: var(--primary-color);
  }

  .no-products {
    text-align: center;
    color: #6b7280;
    font-size: 1rem;
    padding: 2rem;
    grid-column: 1 / -1;
  }

  .product-card.hidden {
    display: none;
  }

  @media (max-width: 1024px) {
    .product-grid {
      grid-template-columns: repeat(3, 1fr);
      gap: 1rem;
    }
  }

  @media (max-width: 768px) {
    .product-grid-container {
      margin: 0;
      padding: 1rem;
      width: 100%;
      max-width: 100%;
    }
    .product-grid {
      grid-template-columns: repeat(2, 1fr);
    }
    .title {
      font-size: 1.875rem;
      padding: 0 0.5rem;
    }
  }

  @media (max-width: 480px) {
    .product-grid {
      grid-template-columns: 1fr;
    }
    .title {
      font-size: 1.5rem;
    }
  }
{% endstylesheet %}

{% javascript %}
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.filter-button');
    const products = document.querySelectorAll('.product-card');
    const container = document.querySelector('.product-grid-container');

    // Filter functionality
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        filterButtons.forEach(btn => btn.classList.remove('active'));
        this.classList.add('active');

        const filterType = this.getAttribute('data-filter');

        products.forEach(product => {
          if (filterType === 'all' || product.getAttribute('data-product-type') === filterType) {
            product.classList.remove('hidden');
          } else {
            product.classList.add('hidden');
          }
        });
      });
    });

    // Scroll-based animation
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          container.classList.add('visible');
          products.forEach(card => card.classList.add('visible'));
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.2 });
    observer.observe(container);
  });
{% endjavascript %}

{% schema %}
{
  "name": "t:general.collection",
  "settings": []
}
{% endschema %}