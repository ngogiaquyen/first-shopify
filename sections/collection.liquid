{% comment %}
  This section is used in the collection template to render collection page
  listing all products within a collection with product type filtering.
  https://shopify.dev/docs/storefronts/themes/architecture/templates/collection
{% endcomment %}

<div class="collection-container" role="main">
  <h1 class="collection-title">{{ collection.title | escape }}</h1>

  {% if collection.products.size > 0 %}
    <div class="collection-filter" role="navigation" aria-label="Product type filter">
      <button class="filter-button active" data-filter="all" aria-pressed="true">Tất cả sản phẩm</button>
      {% assign product_types = collection.products | map: 'type' | uniq | sort %}
      {% for type in product_types %}
        {% if type != blank %}
          <button class="filter-button" data-filter="{{ type | handleize }}" aria-pressed="false">{{ type | escape }}</button>
        {% endif %}
      {% endfor %}
    </div>

    <div class="collection-products" id="product-grid" role="grid">
      {% paginate collection.products by 20 %}
        {% for product in collection.products %}
          <div class="collection-product" data-product-type="{{ product.type | handleize }}" role="gridcell">
            {% if product.featured_image %}
              {% render 'image',
                class: 'collection-product__image',
                image: product.featured_image,
                url: product.url,
                width: 400,
                height: 400,
                crop: 'center',
                loading: 'lazy',
                alt: product.title | escape
              %}
            {% else %}
              <div class="collection-product__image placeholder">
                <span>Không có hình ảnh</span>
              </div>
            {% endif %}
            <div class="collection-product__content">
              <h2 class="product-title">
                <a href="{{ product.url }}" aria-label="{{ product.title | escape }}">{{ product.title | escape }}</a>
              </h2>
              <p class="product-price">{{ product.price | money }}</p>
              <p class="product-type">Loại: {{ product.type | escape }}</p>
            </div>
          </div>
        {% endfor %}
        
        {% if paginate.pages > 1 %}
          <nav class="pagination" role="navigation" aria-label="Phân trang">
            <ul class="pagination__list">
              {% if paginate.previous.is_link %}
                <li class="pagination__item">
                  <a href="{{ paginate.previous.url }}" class="pagination__link pagination__link--prev" aria-label="Trang trước">
                    <span>←</span>
                  </a>
                </li>
              {% endif %}
              {% for part in paginate.parts %}
                {% if part.is_link %}
                  <li class="pagination__item">
                    <a href="{{ part.url }}" class="pagination__link" aria-label="Trang {{ part.title }}">{{ part.title }}</a>
                  </li>
                {% else %}
                  <li class="pagination__item">
                    <span class="pagination__link pagination__link--current" aria-current="page">{{ part.title }}</span>
                  </li>
                {% endif %}
              {% endfor %}
              {% if paginate.next.is_link %}
                <li class="pagination__item">
                  <a href="{{ paginate.next.url }}" class="pagination__link pagination__link--next" aria-label="Trang sau">
                    <span>→</span>
                  </a>
                </li>
              {% endif %}
            </ul>
          </nav>
        {% endif %}
      {% endpaginate %}
    </div>
  {% else %}
    <div class="collection-empty" role="alert">
      <p>Không có sản phẩm nào trong bộ sưu tập này.</p>
    </div>
  {% endif %}
</div>

{% stylesheet %}
.collection-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 24px 16px;
}

.collection-title {
  font-size: 2rem;
  margin-bottom: 24px;
  text-align: center;
}

.collection-products {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
  gap: 20px;
  margin: 32px 0;
}

.collection-filter {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  margin: 24px 0;
  justify-content: center;
}

.filter-button {
  padding: 10px 20px;
  border: 1px solid #d1d5db;
  background: #ffffff;
  border-radius: 6px;
  cursor: pointer;
  font-size: 14px;
  font-weight: 500;
  text-transform: capitalize;
  transition: all 0.2s ease;
}

.filter-button[aria-pressed="true"],
.filter-button:hover {
  background: #111827;
  color: #ffffff;
  border-color: #111827;
}

.collection-product {
  background: #ffffff;
  border-radius: 10px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  overflow: hidden;
  transition: transform 0.2s ease;
}

.collection-product:hover {
  transform: translateY(-4px);
}

.collection-product__image {
  position: relative;
  overflow: hidden;
}

.collection-product__image img {
  width: 100%;
  height: 180px;
  object-fit: cover;
  display: block;
  transition: transform 0.3s ease;
}

.collection-product:hover .collection-product__image img {
  transform: scale(1.05);
}

.collection-product__image.placeholder {
  width: 100%;
  height: 180px;
  background: #f3f4f6;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #6b7280;
  font-size: 14px;
}

.collection-product__content {
  padding: 16px;
  text-align: center;
}

.product-title {
  margin: 0 0 8px;
  font-size: 16px;
}

.product-title a {
  color: #111827;
  text-decoration: none;
  transition: color 0.2s ease;
}

.product-title a:hover {
  color: #2563eb;
}

.product-price {
  margin: 8px 0;
  font-size: 14px;
  font-weight: 500;
}

.product-type {
  margin: 8px 0;
  color: #6b7280;
  font-size: 12px;
}

.collection-product.hidden {
  display: none;
}

.collection-empty {
  text-align: center;
  padding: 40px 0;
  color: #6b7280;
  font-size: 16px;
}

.pagination {
  display: flex;
  justify-content: center;
  margin-top: 32px;
}

.pagination__list {
  display: flex;
  gap: 8px;
  list-style: none;
  padding: 0;
}

.pagination__link {
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 36px;
  height: 36px;
  padding: 0 10px;
  border: 1px solid #d1d5db;
  border-radius: 6px;
  background: #ffffff;
  color: #111827;
  font-size: 14px;
  text-decoration: none;
  transition: all 0.2s ease;
}

.pagination__link:hover:not(.pagination__link--current) {
  background: #111827;
  color: #ffffff;
  border-color: #111827;
}

.pagination__link--current {
  background: #111827;
  color: #ffffff;
  border-color: #111827;
  cursor: default;
}

@media (max-width: 768px) {
  .collection-container {
    padding: 16px 12px;
  }

  .collection-products {
    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
    gap: 16px;
  }

  .collection-product__image img,
  .collection-product__image.placeholder {
    height: 140px;
  }
}

@media (max-width: 480px) {
  .collection-container {
    padding: 12px 8px;
  }

  .collection-products {
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 12px;
  }

  .collection-product__image img,
  .collection-product__image.placeholder {
    height: 110px;
  }

  .product-title {
    font-size: 14px;
  }

  .product-price,
  .product-type {
    font-size: 12px;
  }
}
{% endstylesheet %}

{% javascript %}
document.addEventListener('DOMContentLoaded', () => {
  const filterButtons = document.querySelectorAll('.filter-button');
  const products = document.querySelectorAll('.collection-product');
  let activeFilter = 'all';

  const updateFilters = (button, filterType) => {
    // Update button states
    filterButtons.forEach(btn => {
      const isActive = btn === button;
      btn.classList.toggle('active', isActive);
      btn.setAttribute('aria-pressed', isActive.toString());
    });

    // Optimize product filtering with requestAnimationFrame
    requestAnimationFrame(() => {
      products.forEach(product => {
        const productType = product.getAttribute('data-product-type');
        product.classList.toggle('hidden', filterType !== 'all' && productType !== filterType);
      });
    });

    activeFilter = filterType;
  };

  filterButtons.forEach(button => {
    button.addEventListener('click', () => {
      const filterType = button.getAttribute('data-filter');
      if (filterType !== activeFilter) {
        updateFilters(button, filterType);
      }
    });
  });

  // Accessibility: Handle keyboard navigation
  filterButtons.forEach(button => {
    button.addEventListener('keydown', (e) => {
      if (e.key === 'Enter' || e.key === ' ') {
        e.preventDefault();
        button.click();
      }
    });
  });
});
{% endjavascript %}

{% schema %}
{
  "name": "Bộ sưu tập",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 12,
      "max": 100,
      "step": 4,
      "default": 20,
      "label": "Số sản phẩm mỗi trang"
    }
  ]
}
{% endschema %}