{% comment %}
  This section is used in the collection template to render collection page
  listing all products within a collection with product type filtering.

  https://shopify.dev/docs/storefronts/themes/architecture/templates/collection
{% endcomment %}

<h1>{{ collection.title }}</h1>

<div class="collection-filter">
  <button class="filter-button active" data-filter="all">All Products</button>
  {% assign product_types = collection.products | map: 'type' | uniq %}
  {% for type in product_types %}
    {% if type != blank %}
      <button class="filter-button" data-filter="{{ type | handleize }}">{{ type }}</button>
    {% endif %}
  {% endfor %}
</div>

<div class="collection-products" id="product-grid">
  {% paginate collection.products by 20 %}
    {% for product in collection.products %}
      <div class="collection-product" data-product-type="{{ product.type | handleize }}">
        {% if product.featured_image %}
          {% render 'image',
            class: 'collection-product__image',
            image: product.featured_image,
            url: product.url,
            width: 400,
            height: 400,
            crop: 'center'
          %}
        {% endif %}
        <div class="collection-product__content">
          <p>{{ product.title | escape | link_to: product.url }}</p>
          <p>{{ product.price | money }}</p>
          <p class="product-type">Type: {{ product.type }}</p>
        </div>
      </div>
    {% endfor %}

    {{ paginate | default_pagination }}
  {% endpaginate %}
</div>

{% stylesheet %}
  .collection-products {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(500px, 1fr));
    gap: 20px;
    margin-top: 20px;
  }

  .collection-filter {
    margin-bottom: 20px;
  }

  .filter-button {
    padding: 10px 20px;
    margin: 0 5px;
    border: 1px solid #ccc;
    background: #fff;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .filter-button.active,
  .filter-button:hover {
    background: #000;
    color: #fff;
    border-color: #000;
  }

  .collection-product {
    display: block;
  }

  .collection-product.hidden {
    display: none;
  }
{% endstylesheet %}

{% javascript %}
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.filter-button');
    const products = document.querySelectorAll('.collection-product');

    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        // Remove active class from all buttons
        filterButtons.forEach(btn => btn.classList.remove('active'));
        // Add active class to clicked button
        this.classList.add('active');

        const filterType = this.getAttribute('data-filter');

        // Show/hide products based on filter
        products.forEach(product => {
          if (filterType === 'all' || product.getAttribute('data-product-type') === filterType) {
            product.classList.remove('hidden');
          } else {
            product.classList.add('hidden');
          }
        });
      });
    });
  });
{% endjavascript %}

{% schema %}
{
  "name": "t:general.collection",
  "settings": []
}
{% endschema %}